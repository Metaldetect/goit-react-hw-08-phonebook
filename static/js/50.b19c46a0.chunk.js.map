{"version":3,"file":"static/js/50.b19c46a0.chunk.js","mappings":"gUAWaA,GATgBC,EAAAA,EAAAA,KAAH,iLASDA,EAAAA,EAAAA,IAAH,iDAITC,EAAQD,EAAAA,EAAAA,MAAH,iEAYLE,EAAwBF,EAAAA,EAAAA,IAAH,+EAMrBG,EAASH,EAAAA,EAAAA,OAAH,yJ,SCwCnB,EA5DyB,WACvB,IAAMI,GAAWC,EAAAA,EAAAA,MAUXC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KACJC,MAAM,wBACNC,SAAS,2BACZC,SAAUH,EAAAA,KAAaE,SAAS,gCAG5BE,EAAY,mCAAG,uFAASC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,UACpC,IACET,GACEU,EAAAA,EAAAA,IAAS,CACPN,MAAOI,EAAOJ,MACdE,SAAUE,EAAOF,YAGrBK,IAAAA,OAAAA,QAvBmB,2BAwBnBF,GAGD,CAFC,MAAOG,GACPD,IAAAA,OAAAA,QAzBiB,yCA0BlB,CAZkB,2CAAH,sDAelB,OACE,SAAC,KAAD,CACEE,cA7BkB,CACpBT,MAAO,GACPE,SAAU,IA4BRJ,iBAAkBA,EAClBY,SAAUP,EAHZ,UAKE,SAAC,KAAD,CAAMQ,aAAa,MAAnB,UAEI,iCACE,UAACpB,EAAD,YACE,SAACE,EAAD,CAAOmB,QAAQ,QAAf,oBACA,SAAC,KAAD,CAAOC,KAAK,QAAQC,GAAG,QAAQC,KAAK,WACpC,SAAC,KAAD,CAAcA,KAAK,QAAQC,UAAWtB,QAExC,UAACH,EAAD,YACE,SAACE,EAAD,CAAOmB,QAAQ,WAAf,uBACA,SAAC,KAAD,CAAOC,KAAK,WAAWC,GAAG,WAAWC,KAAK,cAC1C,SAAC,KAAD,CAAcA,KAAK,WAAWC,UAAWtB,QAE3C,SAACC,EAAD,CAAQkB,KAAK,SAAb,4BAMX,ECvDD,MAbA,WACE,OACE,SAAC,KAAD,WACE,iCACE,SAAC,KAAD,WACE,+CAEF,SAACI,EAAD,QAIP,C","sources":["components/RegisterForm/RegisterFormStyles.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n  max-width: 300px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nexport const FormGroup = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: bold;\n`;\n\n// export const RegistrationFormInput = styled(Field)`\n//   width: 100%;\n//   padding: 10px;\n//   border: 1px solid #ccc;\n//   border-radius: 5px;\n// `;\n\nexport const ErrorMessageContainer = styled.div`\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n`;\n\nexport const Button = styled.button`\n  background-color: #007bff;\n  color: #fff;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operation';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\nimport * as Yup from 'yup';\nimport Notiflix from 'notiflix';\nimport {\n  ErrorMessageContainer,\n  Button,\n  FormGroup,\n  Label,\n} from './RegisterFormStyles';\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const successMessage = 'Registred successfully!';\n  const errorMessage = 'Registration failed. Please try again.';\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Invalid email format')\n      .required('Email field is required'),\n    password: Yup.string().required('Password field is required'),\n  });\n\n  const handleSubmit = async ({ values, resetForm }) => {\n    try {\n      dispatch(\n        register({\n          email: values.email,\n          password: values.password,\n        })\n      );\n      Notiflix.Notify.success(successMessage);\n      resetForm();\n    } catch (error) {\n      Notiflix.Notify.failure(errorMessage);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        {\n          <>\n            <FormGroup>\n              <Label htmlFor=\"email\">Email</Label>\n              <Field type=\"email\" id=\"email\" name=\"email\" />\n              <ErrorMessage name=\"email\" component={ErrorMessageContainer} />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"password\">Password</Label>\n              <Field type=\"password\" id=\"password\" name=\"password\" />\n              <ErrorMessage name=\"password\" component={ErrorMessageContainer} />\n            </FormGroup>\n            <Button type=\"submit\">Register</Button>\n          </>\n        }\n      </Form>\n    </Formik>\n  );\n};\n\nexport default RegistrationForm;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport RegisterForm from 'components/RegisterForm';\n\nfunction Register() {\n  return (\n    <HelmetProvider>\n      <>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <RegisterForm />\n      </>\n    </HelmetProvider>\n  );\n}\n\nexport default Register;\n"],"names":["FormGroup","styled","Label","ErrorMessageContainer","Button","dispatch","useDispatch","validationSchema","Yup","email","required","password","handleSubmit","values","resetForm","register","Notiflix","error","initialValues","onSubmit","autoComplete","htmlFor","type","id","name","component","RegisterForm"],"sourceRoot":""}