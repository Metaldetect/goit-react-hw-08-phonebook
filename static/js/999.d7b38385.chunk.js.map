{"version":3,"file":"static/js/999.d7b38385.chunk.js","mappings":"+YAmIA,EAhHyB,WACvB,IAAMA,GAAWC,EAAAA,EAAAA,MAWXC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAAaE,SAAS,0BAC5BC,MAAOH,EAAAA,KACJG,MAAM,wBACND,SAAS,2BACZE,SAAUJ,EAAAA,KAAaE,SAAS,gCAG5BG,EAAY,mCAAG,WAAOC,EAAP,0EAAiBC,EAAjB,EAAiBA,UACpC,IACEV,GACEW,EAAAA,EAAAA,IAAS,CACPP,KAAMK,EAAOL,KACbE,MAAOG,EAAOH,MACdC,SAAUE,EAAOF,YAGrBK,IAAAA,OAAAA,QA1BmB,4BA2BnBF,GAGD,CAFC,MAAOG,GACPD,IAAAA,OAAAA,QA5BiB,yCA6BlB,CAbkB,2CAAH,wDAgBlB,OACE,UAACE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYb,UAAU,KAAKc,QAAQ,KAAnC,sBAGA,SAAC,KAAD,CACEC,cAhDc,CACpB1B,KAAM,GACNE,MAAO,GACPC,SAAU,IA8CJL,iBAAkBA,EAClB6B,SAAUvB,EAHZ,UAKE,UAAC,KAAD,YACE,SAAC,KAAD,CACEwB,GAAIC,EAAAA,EACJC,OAAO,SACP7B,UAAQ,EACR8B,WAAS,EACTC,GAAG,OACHC,MAAM,OACNjC,KAAK,UAEP,SAAC,KAAD,CAAcA,KAAK,OAAOW,UAAU,SACpC,SAAC,KAAD,CACEiB,GAAIC,EAAAA,EACJC,OAAO,SACP7B,UAAQ,EACR8B,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNjC,KAAK,QACLkC,aAAa,WAEf,SAAC,KAAD,CAAclC,KAAK,QAAQW,UAAU,SACrC,SAAC,KAAD,CACEiB,GAAIC,EAAAA,EACJC,OAAO,SACP7B,UAAQ,EACR8B,WAAS,EACT/B,KAAK,WACLiC,MAAM,WACNE,KAAK,WACLH,GAAG,WACHE,aAAa,kBAEf,SAAC,KAAD,CAAclC,KAAK,WAAWW,UAAU,SACxC,SAACyB,EAAA,EAAD,CACED,KAAK,SACLJ,WAAS,EACTN,QAAQ,YACRV,GAAI,CAAEsB,GAAI,EAAGC,GAAI,GAJnB,2BAUJ,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,UACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAAC,KAAD,CAAMC,GAAG,SAAT,uDAMX,ECjHD,MAbA,WACE,OACE,SAAC,KAAD,WACE,iCACE,SAAC,KAAD,WACE,+CAEF,SAACC,EAAD,QAIP,C,0BCXGC,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,gOACD,gBACJN,EAAQ,EAAUG,C,sFCJLI,EAAO,SAACC,EAAOC,GAAR,OAA8BC,EAAAA,EAAAA,GAAS,CACzDC,oBAAqB,cAErBC,oBAAqB,YAIrBC,UAAW,aAEXC,qBAAsB,QACrBL,IAAsBD,EAAMO,MAAQ,CACrCC,YAAaR,EAAMS,QAAQC,MAXT,EAaPC,EAAO,SAAAX,GAAK,OAAIE,EAAAA,EAAAA,GAAS,CACpCU,OAAQZ,EAAMO,MAAQP,GAAOS,QAAQI,KAAKC,SACzCd,EAAMe,WAAWC,MAAO,CACzBC,iBAAkBjB,EAAMO,MAAQP,GAAOS,QAAQS,WAAWtB,QAC1D,eAAgB,CAEdqB,iBAAkBjB,EAAMO,MAAQP,GAAOS,QAAQU,OAAOC,QANjC,EAgFzB,KAhCA,SAAqBC,GACnB,IAAMC,GAAQC,EAAAA,EAAAA,GAAc,CAC1BD,MAAOD,EACP5E,KAAM,mBAGN+E,EAEEF,EAFFE,SADF,EAGIF,EADFrB,kBAAAA,OAFF,SAIA,OAAoBwB,EAAAA,EAAAA,MAAMC,EAAAA,SAAgB,CACxCF,SAAU,EAAcG,EAAAA,EAAAA,KAAKC,EAAAA,EAAc,CACzCC,OAAQ,SAAA7B,GAAK,OAlDG,SAACA,GAAqC,IACtD8B,EADwB7B,EAA8B,wDAEpD8B,EAAoB,CAAC,EACvB9B,GAAqBD,EAAMgC,cAC7BC,OAAOC,QAAQlC,EAAMgC,cAAcG,SAAQ,YAAmB,IACxDC,EADwD,eAAjBC,EAAiB,KAAZC,EAAY,KAE5DP,EAAkB/B,EAAMuC,uBAAuBF,GAAKG,QAAQ,OAAQ,KAAO,CACzEhC,YAAmD,OAArC4B,EAAkBE,EAAO7B,cAAmB,EAAS2B,EAAgB1B,KAEtF,IAEH,IAAI+B,GAAgBvC,EAAAA,EAAAA,GAAS,CAC3BH,KAAMA,EAAKC,EAAOC,GAClB,yBAA0B,CACxBI,UAAW,WAEb,YAAa,CACXqC,WAAY1C,EAAMe,WAAW4B,gBAE/BhC,MAAMT,EAAAA,EAAAA,GAAS,CACb3B,OAAQ,GACPoC,EAAKX,GAAQ,CAGd,cAAe,CACbiB,iBAAkBjB,EAAMO,MAAQP,GAAOS,QAAQS,WAAWtB,YAG7DmC,GACGa,EAA2D,OAAzCd,EAAoB9B,EAAM6C,aAAiF,OAAzDf,EAAoBA,EAAkBgB,qBAA0B,EAAShB,EAAkBiB,eAIrK,OAHIH,IACFH,EAAgB,CAACA,EAAeG,IAE3BH,CACR,CAgBsBZ,CAAO7B,EAAOC,EAAlB,IACXuB,IAEP,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","../node_modules/@mui/icons-material/LockOutlined.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operation';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport Notiflix from 'notiflix';\nimport {\n  Button,\n  Grid,\n  TextField,\n  Avatar,\n  Typography,\n  Box,\n  Container,\n  CssBaseline,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const successMessage = 'Registered successfully!';\n  const errorMessage = 'Registration failed. Please try again.';\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name field is required'),\n    email: Yup.string()\n      .email('Invalid email format')\n      .required('Email field is required'),\n    password: Yup.string().required('Password field is required'),\n  });\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      dispatch(\n        register({\n          name: values.name,\n          email: values.email,\n          password: values.password,\n        })\n      );\n      Notiflix.Notify.success(successMessage);\n      resetForm();\n    } catch (error) {\n      Notiflix.Notify.failure(errorMessage);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          <Form>\n            <Field\n              as={TextField}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n            <Field\n              as={TextField}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n            />\n            <ErrorMessage name=\"email\" component=\"div\" />\n            <Field\n              as={TextField}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"new-password\"\n            />\n            <ErrorMessage name=\"password\" component=\"div\" />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n          </Form>\n        </Formik>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            <Link to=\"/login\">Already have an account? Sign in</Link>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default RegistrationForm;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport RegisterForm from 'components/RegisterForm';\n\nfunction Register() {\n  return (\n    <HelmetProvider>\n      <>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <RegisterForm />\n      </>\n    </HelmetProvider>\n  );\n}\n\nexport default Register;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\nexports.default = _default;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;"],"names":["dispatch","useDispatch","validationSchema","Yup","name","required","email","password","handleSubmit","values","resetForm","register","Notiflix","error","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","initialValues","onSubmit","as","TextField","margin","fullWidth","id","label","autoComplete","type","Button","mt","mb","Grid","container","justifyContent","item","to","RegisterForm","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","html","theme","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","background","common","white","inProps","props","useThemeProps","children","_jsxs","React","_jsx","GlobalStyles","styles","_theme$components","colorSchemeStyles","colorSchemes","Object","entries","forEach","_scheme$palette","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","themeOverrides","components","MuiCssBaseline","styleOverrides"],"sourceRoot":""}