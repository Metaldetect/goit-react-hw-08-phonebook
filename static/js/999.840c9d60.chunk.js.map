{"version":3,"file":"static/js/999.840c9d60.chunk.js","mappings":"8YAmIA,EAhHyB,WACvB,IAAMA,GAAWC,EAAAA,EAAAA,MAWXC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAAaE,SAAS,0BAC5BC,MAAOH,EAAAA,KACJG,MAAM,wBACND,SAAS,2BACZE,SAAUJ,EAAAA,KAAaE,SAAS,gCAG5BG,EAAY,mCAAG,WAAOC,EAAP,0EAAiBC,EAAjB,EAAiBA,UACpC,IACEV,GACEW,EAAAA,EAAAA,IAAS,CACPP,KAAMK,EAAOL,KACbE,MAAOG,EAAOH,MACdC,SAAUE,EAAOF,YAGrBK,IAAAA,OAAAA,QA1BmB,4BA2BnBF,GAGD,CAFC,MAAOG,GACPD,IAAAA,OAAAA,QA5BiB,yCA6BlB,CAbkB,2CAAH,wDAgBlB,OACE,UAACE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYb,UAAU,KAAKc,QAAQ,KAAnC,sBAGA,SAAC,KAAD,CACEC,cAhDc,CACpB1B,KAAM,GACNE,MAAO,GACPC,SAAU,IA8CJL,iBAAkBA,EAClB6B,SAAUvB,EAHZ,UAKE,UAAC,KAAD,YACE,SAAC,KAAD,CACEwB,GAAIC,EAAAA,EACJC,OAAO,SACP7B,UAAQ,EACR8B,WAAS,EACTC,GAAG,OACHC,MAAM,OACNjC,KAAK,UAEP,SAAC,KAAD,CAAcA,KAAK,OAAOW,UAAU,SACpC,SAAC,KAAD,CACEiB,GAAIC,EAAAA,EACJC,OAAO,SACP7B,UAAQ,EACR8B,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNjC,KAAK,QACLkC,aAAa,WAEf,SAAC,KAAD,CAAclC,KAAK,QAAQW,UAAU,SACrC,SAAC,KAAD,CACEiB,GAAIC,EAAAA,EACJC,OAAO,SACP7B,UAAQ,EACR8B,WAAS,EACT/B,KAAK,WACLiC,MAAM,WACNE,KAAK,WACLH,GAAG,WACHE,aAAa,kBAEf,SAAC,KAAD,CAAclC,KAAK,WAAWW,UAAU,SACxC,SAACyB,EAAA,EAAD,CACED,KAAK,SACLJ,WAAS,EACTN,QAAQ,YACRV,GAAI,CAAEsB,GAAI,EAAGC,GAAI,GAJnB,2BAUJ,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,UACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAAC,KAAD,CAAMC,GAAG,SAAT,uDAMX,ECjHD,MAbA,WACE,OACE,SAAC,KAAD,WACE,iCACE,SAAC,KAAD,WACE,+CAEF,SAACC,EAAD,QAIP,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operation';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport Notiflix from 'notiflix';\nimport {\n  Button,\n  Grid,\n  TextField,\n  Avatar,\n  Typography,\n  Box,\n  Container,\n  CssBaseline,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const successMessage = 'Registered successfully!';\n  const errorMessage = 'Registration failed. Please try again.';\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name field is required'),\n    email: Yup.string()\n      .email('Invalid email format')\n      .required('Email field is required'),\n    password: Yup.string().required('Password field is required'),\n  });\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      dispatch(\n        register({\n          name: values.name,\n          email: values.email,\n          password: values.password,\n        })\n      );\n      Notiflix.Notify.success(successMessage);\n      resetForm();\n    } catch (error) {\n      Notiflix.Notify.failure(errorMessage);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          <Form>\n            <Field\n              as={TextField}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n            <Field\n              as={TextField}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n            />\n            <ErrorMessage name=\"email\" component=\"div\" />\n            <Field\n              as={TextField}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"new-password\"\n            />\n            <ErrorMessage name=\"password\" component=\"div\" />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n          </Form>\n        </Formik>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            <Link to=\"/login\">Already have an account? Sign in</Link>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default RegistrationForm;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport RegisterForm from 'components/RegisterForm';\n\nfunction Register() {\n  return (\n    <HelmetProvider>\n      <>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <RegisterForm />\n      </>\n    </HelmetProvider>\n  );\n}\n\nexport default Register;\n"],"names":["dispatch","useDispatch","validationSchema","Yup","name","required","email","password","handleSubmit","values","resetForm","register","Notiflix","error","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","initialValues","onSubmit","as","TextField","margin","fullWidth","id","label","autoComplete","type","Button","mt","mb","Grid","container","justifyContent","item","to","RegisterForm"],"sourceRoot":""}