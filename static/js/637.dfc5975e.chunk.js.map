{"version":3,"file":"static/js/637.dfc5975e.chunk.js","mappings":"yXAmHA,EA/FkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAOXC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KACJC,MAAM,wBACNC,SAAS,2BACZC,SAAUH,EAAAA,KAAaE,SAAS,gCAG5BE,EAAY,mCAAG,WAAOC,EAAP,iFAAiBC,EAAjB,EAAiBA,UAAjB,kBAEXT,GAASU,EAAAA,EAAAA,IAAMF,IAFJ,OAGjBC,IAHiB,gDAKjBE,QAAQC,MAAM,oBAAd,MALiB,yDAAH,wDASlB,OACE,UAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYb,UAAU,KAAKc,QAAQ,KAAnC,sBAGA,SAAC,KAAD,CACEC,cAvCc,CACpBzB,MAAO,GACPE,SAAU,IAsCJJ,iBAAkBA,EAClB4B,SAAUvB,EAHZ,UAKE,UAAC,KAAD,YACE,SAAC,KAAD,CACEwB,GAAIC,EAAAA,EACJJ,QAAQ,WACRK,OAAO,SACPC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,KAEX,SAAC,KAAD,CAAcF,KAAK,QAAQvB,UAAU,SACrC,SAAC,KAAD,CACEiB,GAAIC,EAAAA,EACJJ,QAAQ,WACRK,OAAO,SACPC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,sBAEf,SAAC,KAAD,CAAcD,KAAK,WAAWvB,UAAU,SACxC,SAAC2B,EAAA,EAAD,CACEC,SAAS,SAAC,KAAD,CAAOX,GAAIY,EAAAA,EAAUN,KAAK,aACnCD,MAAM,iBAER,SAACQ,EAAA,EAAD,CACEJ,KAAK,SACLN,WAAS,EACTN,QAAQ,YACRV,GAAI,CAAE2B,GAAI,EAAGC,GAAI,GAJnB,2BAUJ,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,UACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAAC,KAAD,CAAMC,GAAG,YAAT,qDAMX,C,+DCjGD,UAbA,WACE,OACE,SAAC,KAAD,WACE,iCACE,SAAC,KAAD,WACE,wCAEF,SAAC,IAAD,QAIP,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operation';\nimport * as Yup from 'yup';\nimport {\n  Button,\n  Container,\n  CssBaseline,\n  Avatar,\n  Typography,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  Box,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Link } from 'react-router-dom';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Invalid email format')\n      .required('Email field is required'),\n    password: Yup.string().required('Password field is required'),\n  });\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      await dispatch(logIn(values));\n      resetForm();\n    } catch (error) {\n      console.error('Error logging in:', error);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          <Form>\n            <Field\n              as={TextField}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <ErrorMessage name=\"email\" component=\"div\" />\n            <Field\n              as={TextField}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <ErrorMessage name=\"password\" component=\"div\" />\n            <FormControlLabel\n              control={<Field as={Checkbox} name=\"remember\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Form>\n        </Formik>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            <Link to=\"/register\">Don't have an account? Sign Up</Link>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nfunction Login() {\n  return (\n    <HelmetProvider>\n      <>\n        <Helmet>\n          <title>Login</title>\n        </Helmet>\n        <LoginForm />\n      </>\n    </HelmetProvider>\n  );\n}\n\nexport default Login;\n"],"names":["dispatch","useDispatch","validationSchema","Yup","email","required","password","handleSubmit","values","resetForm","logIn","console","error","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","initialValues","onSubmit","as","TextField","margin","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Button","mt","mb","Grid","container","justifyContent","item","to"],"sourceRoot":""}